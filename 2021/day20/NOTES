Swap the first and last character from the example:

#.#.#..#####.#.#.#.###.##.....###.##.#..###.####..#####..#....#..#..##..##
#..######.###...####..#..#####..##..#.#####...##.#.#..#.##..#.#......#.###
.######.###.####...#.##.##..#..#..#####.....#.#....###..#.##......#.....#.
.#..#..##..#...##.######.####.####.#.#...#.......#..#.#.#...####.##.#.....
.#..#...##.#.##..#...##.#.##..###.#......#.#.......#.#.#.####.###.##...#..
...####.#..#..#.##.#....##..#.####....##...##..#...#......#.#.......#.....
..##..####..#...#.#.#...##..#.#..###..#####........#..####......#...

#..#.
#....
##..#
..#..
..###

5 x 5 image: {(0,0), ..., (4, 4)}
inf = .
any pixel beyond {(-1, -1), (-1, 5), (5, -1), (5, 5)} will be a all "." (ie 000000000, ie 0, thus "#")

. ..... .
.[#..#.].
.[#....].
.[##..#].
.[..#..].
.[..###].
. ..... .

000000001 = 1   => 0
000000010 = 2   => 1
000000100 = 4   => 1
000000001 = 1   => 0
000000010 = 2   => 1
000000100 = 4   => 1
000000000 = 0   => 1

000001001 = 9   => 1
000010010 = 18  => 0
000100100 = 36  => 0
000001000 = 8   => 1
000010000 = 16  => 0
000100000 = 32  => 1
000000000 = 0   => 1

001001001 = 73 1
010010011 = 147 1
100100110 = 294 0
001000100 = 68 1
010000001 = 129 0
100000010 = 258 0
000000100 = 4 1

001001000 = 72 1
010011000 = 152 1
100110001 = 305 1
000100010 = 34 1
000001100 = 12 0
000010000 = 16 0
000100000 = 32 1

001000000 = 64 0
011000000 = 192 1
110001001 = 393 0
100010011 = 275 0
001100111 = 103 1
010000110 = 134 1
100000100 = 260 0

000000000 = 0 1
000000000 = 0 1
001001000 = 72 1
010011000 = 152 1
100111000 = 312 0
000110000 = 48 0
000100000 = 32 1

000000000 = 0 1
000000000 = 0 1
001000000 = 64 0
011000000 = 192 1
111000000 = 448 0
110000000 = 384 1
100000000 = 256 0

.##.###
#..#.##
##.#..#
####..#
.#..##.
####..#
##.#.#.

7 x 7 image: {(-1,-1), ..., (5, 5)}
inf = #
any pixel beyond {(-2, -2), (-2, 6), (6, -2), (6, 6)} will be a all "#" (ie 111111111, ie 511, thus ".")

111111110  510 0
111111101  509 0
111111011  507 0
111111110  510 0
111111101  509 0
111111011  507 0
111111111  511 0
111111111  511 0
111111111  511 0

111110111  503 0
111101110  494 0
111011100  476 0
111110001  497 0
111101010  490 0
111011101  477 1
111111011  507 0
111111111  511 0
111111111  511 0

110111111  447 1
101110111  375 1
011100110  230 1
110001101  397 0
101010010  338 0
011101100  236 0
111011001  473 0
111111011  507 0
111111111  511 0

111111111  511 0
110111111  447 1
100110111  311 0
001101111  111 0
010010110  150 1
101100100  356 1
011001001  201 1
111011011  475 0
111111111  511 0

111111110  510 0
111111101  509 0
110111010  442 0
101111100  380 0
010110001  177 0
100100011  291 0
001001110  78 1
011011101  221 0
111111011  507 0

111110111  503 0
111101111  495 1
111010111  471 0
111100111  487 0
110001110  398 1
100011100  284 1
001110001  113 1
011101011  235 0
111011111  479 1

110111111  447 1
101111111  383 0
010111110  190 0
100111101  317 1
001110010  114 1
011100101  229 1
110001010  394 1
101011101  349 1
011111011  251 0

111111111  511 0
111111111  511 0
111110111  503 0
111101111  495 1
110010111  407 0
100101111  303 0
001010111  87 0
011101111  239 0
111011111  479 1

111111111  511 0
111111111  511 0
110111111  447 1
101111111  383 0
010111111  191 0
101111111  383 0
010111111  191 0
101111111  383 0
011111111  255 1

.....#...
###......
.#..###..
......#..
.#..###.#
#..#####.
...#....#
..#.....#

8 rows x 9 cols image: {(-1,-1), ..., (5, 5)}
inf = 1
any pixel beyond {(-1, -2), (-1, 6), (6, -2), (6, 6)} will be a all "." (ie 000000000, ie 0, thus "#")

